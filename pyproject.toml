[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "netbox-mcp"
version = "1.0.0"
description = "NetBox Model Context Protocol (MCP) Server for accessing NetBox DCIM and IPAM data"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "NetBox MCP Team"},
]
maintainers = [
    {name = "NetBox MCP Team"},
]
keywords = [
    "netbox",
    "mcp",
    "model-context-protocol", 
    "dcim",
    "ipam",
    "network-automation",
    "infrastructure",
    "api"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]
requires-python = ">=3.10"
dependencies = [
    "fastmcp>=2.0.0",
    "pynetbox>=7.3.0",
    "python-dotenv>=1.0.0",
    "requests>=2.32.3,<3.0",
    "urllib3>=2.2.3,<3.0",
    "packaging>=21.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "isort>=5.12.0",
]
enhanced = [
    "colorlog>=6.7.0",
    "jsonschema>=4.17.0",
    "pyyaml>=6.0",
]
all = [
    "netbox-mcp[dev,enhanced]"
]

[project.urls]
Homepage = "https://github.com/your-org/netbox-mcp"
Documentation = "https://github.com/your-org/netbox-mcp#readme"
Repository = "https://github.com/your-org/netbox-mcp.git"
"Bug Tracker" = "https://github.com/your-org/netbox-mcp/issues"
Changelog = "https://github.com/your-org/netbox-mcp/blob/main/CHANGELOG.md"

[project.scripts]
netbox-mcp = "src.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*", "resources*", "*.py"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.yaml", "*.yml", "*.env.example"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi'

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src", "resources"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# MyPy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "pynetbox.*",
    "fastmcp.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Flake8 configuration (in setup.cfg or tox.ini if needed)
# [tool.flake8] is not supported, use setup.cfg instead

# Pre-commit configuration
[tool.pre-commit]
# This is just a placeholder - actual pre-commit config goes in .pre-commit-config.yaml
